{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to initialise the block.\n *\n * @module    mod_dataview/main\n * @copyright 2020 David Herney @ BambuCo\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/modal_factory', 'core/modal_events', 'core/templates', 'core/notification', 'core/ajax'],\nfunction ($, ModalFactory, ModalEvents, Templates, Notification, Ajax) {\n\n    var wwwroot = M.cfg.wwwroot;\n    var createmessagemodal = null;\n    var $currentopenlink = null;\n    var $recordsboard = null;\n    var $createmessage = null;\n\n    var loadrecord = function (record, template) {\n\n        var re, newvalue;\n\n        for (var i in record) {\n            if (record.hasOwnProperty(i)) {\n                re = new RegExp('\\\\[\\\\[' + i + '\\\\]\\\\]', \"g\");\n                newvalue = record[i] ? record[i] : '';\n                template = template.replace(re, newvalue);\n            }\n        }\n\n        return template;\n    };\n\n    /**\n     * Initialise all.\n     *\n     * @param {int} dataviewid The id of the dataview.\n     */\n    var init = function (dataviewid) {\n\n        $recordsboard = $('.dataview-board .records');\n        $createmessage = $('#dataview-tpl-createmessage');\n\n        $('.filter-box .one-filter').each(function() {\n            var $_this = $(this);\n            $_this.find('.filter-head').on('click', function() {\n                $_this.toggleClass('opened');\n            });\n\n        });\n\n        // Modal to display data.\n        ModalFactory.create({\n            body: $createmessage.html(),\n            type: ModalFactory.types.SAVE_CANCEL\n        })\n        .then(function(modal) {\n\n            createmessagemodal = modal;\n\n            modal.getModal().addClass('mod_dataview-message-modal');\n            modal.setSaveButtonText(M.str.mod_dataview.goto);\n\n            // Confirmation only.\n            modal.getRoot().on(ModalEvents.save, function() {\n                if ($currentopenlink) {\n                    $(\"<a>\").prop({\n                        target: \"_blank\",\n                        href: $currentopenlink.attr('href')\n                        })[0].click();\n                }\n            });\n\n            // Confirming, closing, or cancelling will destroy the modal and return focus to the trigger element.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                $currentopenlink = null;\n            });\n        });\n\n        $('.filter-box .search-btn').on('click', function () {\n\n            $recordsboard.empty().addClass('loading');\n\n            var q = $('#fulltext-query').val();\n            get_records(dataviewid, q, []);\n\n        });\n\n        $('.filter-box .filter-btn').on('click', function () {\n\n            var filters = [];\n\n            $('.one-filter').each(function() {\n                var $one = $(this);\n                $one.find('input[type=\"checkbox\"]:checked:enabled').each(function() {\n                    var $control = $(this);\n\n                    var val = $.trim($control.val());\n                    if (val != '') {\n                        var filter = {\n                            \"key\": $control.attr('name'),\n                            \"value\": val\n                        };\n\n                        filters.push(filter);\n                    }\n                });\n\n                $one.find('select').each(function() {\n\n                    var $control = $(this);\n\n                    $control.find('option:selected').each(function() {\n                        var val = $.trim($(this).val());\n                        if (val != '') {\n                            var filter = {\n                                \"key\": $control.attr('name'),\n                                \"value\": val\n                            };\n\n                            if (filter.value != '') {\n                                filters.push(filter);\n                            }\n                        }\n                    });\n\n                });\n\n                $one.find('input[type=\"text\"]').each(function() {\n\n                    var $control = $(this);\n                    var val = $.trim($control.val());\n                    if (val != '') {\n                        var filter = {\n                            \"key\": $control.attr('name'),\n                            \"value\": val\n                        };\n\n                        filters.push(filter);\n                    }\n                });\n            });\n\n            $recordsboard.empty().addClass('loading');\n\n            // Clear special characters used by original data module.\n            filters.forEach(element => {\n                element.key = element.key.replace('f_', '');\n                element.key = element.key.replace('[]', '');\n            });\n\n            get_records(dataviewid, '', filters);\n\n        });\n\n\n    };\n\n    /**\n     * Get records from the dataview.\n     *\n     * @param {int} dataviewid\n     * @param {string} q\n     * @param {object} filters\n     */\n    var get_records = function (dataviewid, q, filters) {\n\n        var $listtemplate = $('#dataview-tpl-itemlist');\n        var $singletemplate = $('#dataview-tpl-itemsingle');\n\n        Ajax.call([{\n            methodname: 'mod_dataview_query',\n            args: { 'id': dataviewid, 'q': q, 'filters': filters },\n            done: function (data) {\n                $('.dataview-board .records').removeClass('loading');\n\n                data.forEach(element => {\n                    var record = JSON.parse(element);\n                    var $content = $(loadrecord(record, $listtemplate.html()));\n                    $content.find('[data-operation=\"viewdetail\"]').on('click', function() {\n                        var $open = $(this);\n                        var modalresource = $open.data('modal');\n\n                        if (modalresource) {\n                            modalresource.show();\n                            return;\n                        }\n\n                        var tpl = $singletemplate.html();\n                        var detailview;\n\n                        if (tpl.trim() != '') {\n                            detailview = loadrecord(record, tpl);\n                        } else {\n                            record.wwwroot = wwwroot;\n                            detailview = Templates.render('mod_dataview/detail', record)\n                            .then(function(html) {\n                                    var $html = $(html);\n                                    $html.find('[data-operation=\"confirmgo\"]').on('click', function(e) {\n                                        e.preventDefault();\n                                        $currentopenlink = $(this);\n                                        createmessagemodal.show();\n                                    });\n\n                                    return $html;\n                                }\n                            );\n                        }\n\n                        ModalFactory.create({\n                            large: true,\n                            body: detailview\n                        })\n                        .then(function(modal) {\n                            modalresource = modal;\n                            modal.getModal().addClass('mod_dataview-record-modal');\n                            modal.show();\n\n                            $open.data('modal', modalresource);\n                        });\n                    });\n\n                    $recordsboard.append($content);\n                });\n\n            },\n            fail: function (e) {\n                Notification.exception(e);\n                console.log(e);\n            }\n        }]);\n    };\n\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","ModalFactory","ModalEvents","Templates","Notification","Ajax","wwwroot","M","cfg","createmessagemodal","$currentopenlink","$recordsboard","$createmessage","loadrecord","record","template","re","newvalue","i","hasOwnProperty","RegExp","replace","get_records","dataviewid","q","filters","$listtemplate","$singletemplate","call","methodname","args","done","data","removeClass","forEach","element","JSON","parse","$content","html","find","on","$open","this","modalresource","show","detailview","tpl","trim","render","then","$html","e","preventDefault","create","large","body","modal","getModal","addClass","append","fail","exception","console","log","init","each","$_this","toggleClass","type","types","SAVE_CANCEL","setSaveButtonText","str","mod_dataview","goto","getRoot","save","prop","target","href","attr","click","hidden","empty","val","$one","$control","filter","push","value","key"],"mappings":"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"}